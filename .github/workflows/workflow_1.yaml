name: PUC Natation Monitor

on:
  schedule:
    # Run every 10 minutes (reliable schedule)
    - cron: "*/10 * * * *"
  workflow_dispatch: # Allow manual triggering
  push:
    branches: [main] # Also run on pushes to test

jobs:
  monitor-homepage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: Initialize venv
        run: |
          uv venv -p 3.11 --seed

      - name: Install all project dependencies
        run: |
          uv sync

      - name: Install the web_monitoring_bots package
        run: |
          uv pip install .

      # Simple cache restoration - just restore the cache file
      - name: Restore content cache
        uses: actions/cache@v4
        with:
          path: content_cache.json
          key: content-cache
          restore-keys: |
            content-cache

      # Check if cache file exists and show its contents for debugging
      - name: Check cache file
        run: |
          echo "Checking for cache file..."
          ls -la content_cache.json || echo "No cache file found (expected on first run)"
          if [ -f content_cache.json ]; then
            echo "Cache file contents:"
            cat content_cache.json
          fi

      - name: Run monitor check
        env:
          URL: ${{ secrets.URL }}
          CHECK_INTERVAL: 4
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          echo "Starting monitor check at $(date)"
          # Use uv run instead of manual venv activation
          uv run python src/web_monitoring_bots/monitor.py
          echo "Monitor check completed at $(date)"

          # Show cache file after run for debugging
          if [ -f content_cache.json ]; then
            echo "Cache file after run:"
            cat content_cache.json
          fi
